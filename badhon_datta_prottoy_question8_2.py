# -*- coding: utf-8 -*-
"""BADHON DATTA.PROTTOY - Question8.2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LVMIxNABB9MLMVya5frEdmHgF--Ul6q_

1. Group the flights in the dataset flights.csv by destination
2. Summarize to compute average distance, average delay and number of flights
3. Create a new data frame with the information in 2, and eliminate noisy data:
   * a) Flights to Honolulu (HNL)
   * b) Count < 20
4. Display the relation between delay and distance to see if there is a correlation
5. Create a bar graph with the flights by AIRLINE
6. Display all the flights that arrived at HNL by AIRLINE
7. Display a histogram with the delay, perhaps you have to filter some information.
"""

import pandas as pd

df = pd.read_csv('flights.csv')
print(df.head())

"""Ans to the question no 1 & 2

The data was loaded from a CSV file (flights.csv), and the first few rows were displayed to understand the structure of the dataset, which contains information about flights including year, month, airline, origin and destination, flight delays, and other related metrics.

The dataset was grouped by DESTINATION_AIRPORT to summarize key metrics for each destination.
Calculated the average distance (average_distance), average arrival delay (average_delay), and total number of flights (number_of_flights) per destination.
The summary data was stored in a new dataframe.
"""

summary = df.groupby('DESTINATION_AIRPORT').agg(
    average_distance=('DISTANCE', 'mean'),
    average_delay=('ARRIVAL_DELAY', 'mean'),
    number_of_flights=('FLIGHT_NUMBER', 'count')
).reset_index()
print(summary)

"""Ans to the question no 3

Filtered the summarized data by excluding flights to Honolulu (HNL) and removing destinations with fewer than 20 flights to reduce noise.
The resulting dataframe, filtered_summary, provided insights into destinations with consistent flight volumes.
"""

filtered_summary = summary[(summary['DESTINATION_AIRPORT'] != 'HNL') & (summary['number_of_flights'] >= 20)]
print(filtered_summary)

"""Ans to the question no 4

Created a scatter plot to visualize the relationship between average flight delay and average distance for the filtered data.
This helped to identify any potential correlation between the two variables.
"""

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(10, 6))

print(filtered_summary.columns)

sns.scatterplot(data=filtered_summary, x='average_distance', y='average_delay')
plt.title('Relation Between Delay and Distance')
plt.xlabel('Distance')
plt.ylabel('Delay')
plt.show()

"""Ans to the question no 5

Aggregated data by AIRLINE to compute the number of flights each airline operated.
Created a bar chart to display the number of flights by airline, showing comparative airline activity within the dataset.
"""

airline_summary = df.groupby('AIRLINE')['FLIGHT_NUMBER'].count().reset_index(name='number_of_flights')

plt.figure(figsize=(12, 6))
sns.barplot(data=airline_summary, x='AIRLINE', y='number_of_flights')
plt.title('Number of Flights by Airline')
plt.xlabel('Airline')
plt.ylabel('Number of Flights')
plt.xticks(rotation=45)
plt.show()

"""Ans to the question no 6

Extracted all flights with Honolulu (HNL) as their destination.
Displayed relevant columns (AIRLINE, FLIGHT_NUMBER, ARRIVAL_DELAY) to focus on details specific to these flights.
"""

hnl_flights = df[df['DESTINATION_AIRPORT'] == 'HNL']

print(hnl_flights[['AIRLINE', 'FLIGHT_NUMBER', 'ARRIVAL_DELAY']])

"""Ans to the question no 7

Filtered the data to exclude null and negative departure delay values.
Created a histogram of departure delays, providing insight into the frequency and distribution of delays, which is helpful to understand delay patterns among the flights.
"""

delay_filtered = df[df['DEPARTURE_DELAY'].notnull() & (df['DEPARTURE_DELAY'] >= 0)]

plt.figure(figsize=(10, 6))
sns.histplot(delay_filtered['DEPARTURE_DELAY'], bins=30, kde=True)
plt.title('Histogram of Departure Delays')
plt.xlabel('Departure Delay (minutes)')
plt.ylabel('Frequency')
plt.show()