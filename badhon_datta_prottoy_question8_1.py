# -*- coding: utf-8 -*-
"""BADHON DATTA.PROTTOY - Question8.1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15Jv5BWhl-2oCmBQkwR2YgmSQ0dq9veZK

# 8.1 Nifty-500 index

Please load the NIFTY-500 dataset available in https://www.kaggle.com/dhimananubhav/nifty-500-fundamental-statistics
1. Visualize the top 20 and bottom 20 stocks in NIFTY-500 based on the market cap.
2. Visualize the high, low and the current value of the top-20 stocks.
3. Visualize the price earnings, sales growth 3 years, 3 year price earnings, and price to book value of top-3 stocks (by market value)
4. Visualize the density plots of the parameters in Q3
"""

import pandas as pd
df = pd.read_csv('nifty_500_stats.csv',delimiter=';')
print(df.head())

import matplotlib.pyplot as plt

"""Ans to the question no 1

We sorted the data based on market cap and extracted the top and bottom 20 stocks. Using a bar plot, we visualized these stocks' market caps, comparing the highest and lowest in the dataset.
"""

df_sorted = df.sort_values(by='market_cap', ascending=False)
top_20 = df_sorted.head(20)
bottom_20 = df_sorted.tail(20)

plt.figure(figsize=(14, 8))
plt.subplot(2, 1, 1)
plt.bar(top_20['current_value'], top_20['market_cap'])
plt.xticks(rotation=90)
plt.title('Top 20 Stocks by Market Cap')
plt.subplot(2, 1, 2)
plt.bar(bottom_20['current_value'], bottom_20['market_cap'])
plt.xticks(rotation=90)
plt.title('Bottom 20 Stocks by Market Cap')

plt.tight_layout()
plt.show()

"""Ans to the question no 2

For the top 20 stocks by market cap, we plotted the high, low, and current values. This gave a clear view of each stock's price range over the last 52 weeks.
"""

top_20_values = top_20[['company', 'high_52week', 'low_52week', 'current_value']]

plt.figure(figsize=(12, 8))
top_20_values.set_index('company').plot(kind='bar', figsize=(14, 8))
plt.title('High, Low, and Current Value of Top 20 Stocks')
plt.ylabel('Value')
plt.xlabel('Stocks')
plt.xticks(rotation=45)
plt.legend(title='Metrics')
plt.tight_layout()
plt.show()

"""Ans to the question no 3

We calculated a new metric, the 3-year price-to-earnings ratio (price_earnings_3yr), adjusted by each stock's 3-year sales growth. We then visualized the price-to-earnings, sales growth (3 years), 3-year price-to-earnings, and book value for the top 3 stocks by market cap using a grouped bar chart.
"""

import pandas as pd

df['price_earnings_3yr'] = df['price_earnings'] / (1 + df['sales_growth_3yr'])

import seaborn as sns

top_3 = df.sort_values(by='market_cap', ascending=False).head(3)

columns_to_visualize = ['company', 'price_earnings', 'sales_growth_3yr','price_earnings_3yr', 'book_value']
top_3_data = top_3[columns_to_visualize]

top_3_melted = pd.melt(top_3_data, id_vars=['company'], var_name='Metric', value_name='Value')

plt.figure(figsize=(12, 6))
sns.barplot(x='company', y='Value', hue='Metric', data=top_3_melted)
plt.title('Financial Metrics of Top 3 Stocks by Market Cap')
plt.xticks(rotation=45, ha='right')
plt.ylabel('Value')
plt.tight_layout()
plt.show()

"""Ans to the question no 4

Lastly, we created density plots to show the distributions of the price_earnings, sales_growth_3yr, price_earnings_3yr, and book_value metrics across the top 3 stocks, providing insight into how these values are distributed.
"""

plt.figure(figsize=(15, 10))
for i, col in enumerate(['price_earnings', 'sales_growth_3yr','price_earnings_3yr','book_value'], 1):
    plt.subplot(2, 2, i)
    sns.kdeplot(data=top_3[col], fill=True)
    plt.title(f'Density Plot of {col}')
    plt.xlabel(col)

plt.tight_layout()
plt.show()

